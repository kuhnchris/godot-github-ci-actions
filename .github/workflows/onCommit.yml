name: Conversion & build job(s)
on: push
#on: 
#  push:
#    branches:
#      - main

env:
  GODOT_VERSION: 3.4
  REPO_NAME: godot-github-ci-actions


jobs:
  checkDockerImage:
    name: Checking the docker image for godot, or build if not existent
    runs-on: ubuntu-latest
    steps:
    - id: checkForImage
      name: Check for existing docker image...
      run: |
        result=`docker manifest inspect ghcr.io/${{ github.repository_owner }}/${{ env.REPO_NAME }}:${{ env.GODOT_VERSION }}; echo $?`
        echo ::set-output name=imageExists:${result}
        if [ "${result}" == "0" ]; then
          echo "image exists. skipping build..."
        else
          echo "image does not exist - building..."
        fi

    - id: buildImage
      name: Building docker image...
      if: steps.checkForImage.outputs.imageExists != 0
      uses: ./main/.github/actions/buildGodotTemplateContainer
      with:
        godot-version: ${{ env.GODOT_VERSION }}

    - name: Log in to registry
      if: steps.checkForImage.outputs.imageExists != 0
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push image
      if: steps.checkForImage.outputs.imageExists != 0
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{ env.REPO_NAME }}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag $REPO_NAME $IMAGE_ID:${{ env.GODOT_VERSION }}
        docker push $IMAGE_ID:$VERSION

  buildX11:
    needs: checkDockerImage
    name: Build project (X11)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
        path: main
        token: ${{ secrets.MY_TOKEN || github.token }}

    - name: Modify GODOT_VERSION in Dockerfile...
      id: dockerfileEnrichment
      run: |
        sed 's/GODOT_VERSION/'${{ env.GODOT_VERSION }}'/g' -i ./main/.github/actions/exportGodotProject/Dockerfile

    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build release
      id: exportGodot
      uses: ./main/.github/actions/exportGodotProject
      with:
        project-directory: "./main/example-project"
        export-debug: false
        export-pack: false
        export-platform: "Linux/X11"
        executable-name: "example-project"

    - name: Release
      uses: softprops/action-gh-release@v1
      #if: startsWith(github.ref, 'refs/tags/')
      with:
        body: |
          This is an automated build for GitHub SHA ${{ github.sha }}
        tag_name: latest-dev
        files: |
          ./export-artifacts/*